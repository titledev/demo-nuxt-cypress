{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 12,
    "pending": 0,
    "failures": 13,
    "start": "2025-07-22T09:52:02.408Z",
    "end": "2025-07-22T09:53:22.338Z",
    "duration": 79930,
    "testsRegistered": 25,
    "passPercent": 48,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6951d3dd-15f1-4a6e-97c7-7d4ecd84abe6",
      "title": "",
      "fullFile": "cypress/e2e/register.cy.ts",
      "file": "cypress/e2e/register.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6650425-401d-405c-ab51-7dde0214f8d0",
          "title": "Registration Form",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display registration form with all elements",
              "fullTitle": "Registration Form should display registration form with all elements",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the page loads correctly\ncy.get(\"h2\").should(\"contain\", \"Create your account\");\ncy.get(\"p\").should(\"contain\", \"Join us today! Please fill in your details.\");\n// Check if form elements are present\ncy.get('input[name=\"name\"]').should(\"be.visible\");\ncy.get('input[name=\"email\"]').should(\"be.visible\");\ncy.get('input[name=\"password\"]').should(\"be.visible\");\ncy.get('input[name=\"confirmPassword\"]').should(\"be.visible\");\ncy.get('input[name=\"agree-terms\"]').should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Check if links are present\ncy.get(\"a\").contains(\"Sign in\").should(\"be.visible\");",
              "err": {},
              "uuid": "f5dd3135-2d9b-4c91-9f1d-0da96d930508",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation errors for empty form submission",
              "fullTitle": "Registration Form should show validation errors for empty form submission",
              "timedOut": null,
              "duration": 4280,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Submit form without entering any data\ncy.get('button[type=\"submit\"]').click();\n// Check for name validation error\ncy.get('input[name=\"name\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Name is required\").should(\"be.visible\");\n// Check for email validation error\ncy.get('input[name=\"email\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Email is required\").should(\"be.visible\");\n// Check for password validation error\ncy.get('input[name=\"password\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Password is required\").should(\"be.visible\");\n// Check for confirm password validation error\ncy.get('input[name=\"confirmPassword\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Please confirm your password\").should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#name.mt-1.appearance-none.relative.block.w-full.px-3.py-2.border.border-gray-300.placeholder-gray-500.text-gray-900.rounded-md.focus:outline-none.focus:ring-indigo-500.focus:border-indigo-500.sm:text-sm>' to have class 'border-red-500'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#name.mt-1.appearance-none.relative.block.w-full.px-3.py-2.border.border-gray-300.placeholder-gray-500.text-gray-900.rounded-md.focus:outline-none.focus:ring-indigo-500.focus:border-indigo-500.sm:text-sm>' to have class 'border-red-500'\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:32:33)",
                "diff": null
              },
              "uuid": "e2330757-9cf7-4994-8fac-e225f4519306",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for short name",
              "fullTitle": "Registration Form should show validation error for short name",
              "timedOut": null,
              "duration": 5176,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter short name\ncy.get('input[name=\"name\"]').type(\"A\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for name length validation error\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:64:7)",
                "diff": null
              },
              "uuid": "ddae66ed-adf0-4e61-93d8-bfd758f09662",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for invalid email format",
              "fullTitle": "Registration Form should show validation error for invalid email format",
              "timedOut": null,
              "duration": 5197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter invalid email\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"invalid-email\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for email format validation error\ncy.get(\"p\")\n    .contains(\"Please enter a valid email address\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter a valid email address' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter a valid email address' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:80:7)",
                "diff": null
              },
              "uuid": "37249e60-4fd9-4f0d-bd6b-7ce5006dec63",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for short password",
              "fullTitle": "Registration Form should show validation error for short password",
              "timedOut": null,
              "duration": 5091,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but short password\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for password length validation error\ncy.get(\"p\")\n    .contains(\"Password must be at least 6 characters\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:96:7)",
                "diff": null
              },
              "uuid": "e2cee82a-d509-40c6-ac42-441b2f17474b",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for mismatched passwords",
              "fullTitle": "Registration Form should show validation error for mismatched passwords",
              "timedOut": null,
              "duration": 5339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but mismatched passwords\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"differentpassword\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for password mismatch validation error\ncy.get(\"p\").contains(\"Passwords do not match\").should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Passwords do not match' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Passwords do not match' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:110:51)",
                "diff": null
              },
              "uuid": "917bb8c6-bbb7-408e-829f-5088cacdc8f4",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error when terms are not agreed",
              "fullTitle": "Registration Form should show validation error when terms are not agreed",
              "timedOut": null,
              "duration": 5300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but don't agree to terms\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for terms agreement validation error\ncy.get(\"p\")\n    .contains(\"You must agree to the terms and conditions\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'You must agree to the terms and conditions' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'You must agree to the terms and conditions' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:126:7)",
                "diff": null
              },
              "uuid": "6a105dc4-972d-4565-823c-fb4a0873e010",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully register with valid data",
              "fullTitle": "Registration Form should successfully register with valid data",
              "timedOut": null,
              "duration": 2370,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check loading state\ncy.get('button[type=\"submit\"]').should(\"contain\", \"Creating account...\");\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");\n// Wait for redirect to login page\ncy.url().should(\"include\", \"/login\");\n// Verify user data is saved to localStorage\ncy.window().then(function (win) {\n    var users = JSON.parse(win.localStorage.getItem(\"registeredUsers\") || \"[]\");\n    var newUser = users.find(function (user) { return user.email === \"newuser@example.com\"; });\n    expect(newUser).to.exist;\n    expect(newUser.name).to.equal(\"John Doe\");\n    expect(newUser.password).to.equal(\"password123\");\n});",
              "err": {},
              "uuid": "decec9c5-dce4-4aee-9548-c734cb39dac2",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error message for existing email",
              "fullTitle": "Registration Form should show error message for existing email",
              "timedOut": null,
              "duration": 7953,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// First, register a user\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"existing@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Wait for redirect and go back to register\ncy.url().should(\"include\", \"/login\");\ncy.visit(\"/register\");\n// Try to register with the same email\ncy.get('input[name=\"name\"]').type(\"Another User\");\ncy.get('input[name=\"email\"]').type(\"existing@example.com\");\ncy.get('input[name=\"password\"]').type(\"differentpassword\");\ncy.get('input[name=\"confirmPassword\"]').type(\"differentpassword\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Check for existing email error message\ncy.get(\"div\")\n    .contains(\"An account with this email already exists\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An account with this email already exists' within the element: <div#teleports> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An account with this email already exists' within the element: <div#teleports> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:185:7)",
                "diff": null
              },
              "uuid": "6474a80a-5d62-4bbc-a048-1ffaa6682448",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear validation errors when user starts typing",
              "fullTitle": "Registration Form should clear validation errors when user starts typing",
              "timedOut": null,
              "duration": 4334,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Submit empty form to trigger validation errors\ncy.get('button[type=\"submit\"]').click();\n// Verify errors are shown\ncy.get(\"p\").contains(\"Name is required\").should(\"be.visible\");\ncy.get(\"p\").contains(\"Email is required\").should(\"be.visible\");\n// Start typing in name field\ncy.get('input[name=\"name\"]').type(\"John\");\n// Name error should be cleared\ncy.get(\"p\").contains(\"Name is required\").should(\"not.exist\");\n// Start typing in email field\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\n// Email error should be cleared\ncy.get(\"p\").contains(\"Email is required\").should(\"not.exist\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name is required' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name is required' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:193:45)",
                "diff": null
              },
              "uuid": "c6a86a3f-264c-46f6-a835-097bc762fd26",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle terms and conditions checkbox",
              "fullTitle": "Registration Form should handle terms and conditions checkbox",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if terms checkbox is unchecked by default\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");\n// Click the checkbox\ncy.get('input[name=\"agree-terms\"]').click();\n// Check if it's now checked\ncy.get('input[name=\"agree-terms\"]').should(\"be.checked\");\n// Click again to uncheck\ncy.get('input[name=\"agree-terms\"]').click();\n// Check if it's unchecked\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "90545c74-afc3-420c-adb3-5f3ef9aa19bf",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to login page when clicking sign in link",
              "fullTitle": "Registration Form should navigate to login page when clicking sign in link",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the sign in link\ncy.get(\"a\").contains(\"Sign in\").click();\n// Should navigate to login page\ncy.url().should(\"include\", \"/login\");",
              "err": {},
              "uuid": "71c00267-8019-4728-898f-55ac2523736f",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper form accessibility",
              "fullTitle": "Registration Form should have proper form accessibility",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if form inputs have proper labels\ncy.get('input[name=\"name\"]').should(\"have.attr\", \"id\", \"name\");\ncy.get('input[name=\"email\"]').should(\"have.attr\", \"id\", \"email\");\ncy.get('input[name=\"password\"]').should(\"have.attr\", \"id\", \"password\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.attr\", \"id\", \"confirmPassword\");\ncy.get('input[name=\"agree-terms\"]').should(\"have.attr\", \"id\", \"agree-terms\");\n// Check if form has proper autocomplete attributes\ncy.get('input[name=\"name\"]').should(\"have.attr\", \"autocomplete\", \"name\");\ncy.get('input[name=\"email\"]').should(\"have.attr\", \"autocomplete\", \"email\");\ncy.get('input[name=\"password\"]').should(\"have.attr\", \"autocomplete\", \"new-password\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.attr\", \"autocomplete\", \"new-password\");",
              "err": {},
              "uuid": "1d5e391c-1cc9-44f1-a350-11e210439abe",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle keyboard navigation",
              "fullTitle": "Registration Form should handle keyboard navigation",
              "timedOut": null,
              "duration": 239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Tab through form elements\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"name\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"email\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"password\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"confirmPassword\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"agree-terms\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"type\", \"submit\");",
              "err": {
                "message": "TypeError: cy.get(...).tab is not a function",
                "estack": "TypeError: cy.get(...).tab is not a function\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:267:19)\n    at runnable.fn (http://localhost:3000/__cypress/runner/cypress_runner.js:141799:19)\n    at callFn (http://localhost:3000/__cypress/runner/cypress_runner.js:160877:21)\n    at Runnable.run (http://localhost:3000/__cypress/runner/cypress_runner.js:160864:7)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:166954:30)\n    at PassThroughHandlerContext.finallyHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "95440267-20f7-4036-bae4-550751cf911e",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit form on Enter key press",
              "fullTitle": "Registration Form should submit form on Enter key press",
              "timedOut": null,
              "duration": 2289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit with Enter key\ncy.get('input[name=\"confirmPassword\"]').type(\"{enter}\");\n// Should redirect to login page\ncy.url().should(\"include\", \"/login\");",
              "err": {},
              "uuid": "603c6c8a-b0f5-417d-a3cc-86030884bfd8",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show loading state during form submission",
              "fullTitle": "Registration Form should show loading state during form submission",
              "timedOut": null,
              "duration": 1243,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check loading state\ncy.get('button[type=\"submit\"]').should(\"contain\", \"Creating account...\");\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");\n// Check if spinner is visible\ncy.get(\"svg.animate-spin\").should(\"be.visible\");",
              "err": {},
              "uuid": "6b658fb6-1669-4dae-baab-27cbe99b46ed",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear form data after successful registration",
              "fullTitle": "Registration Form should clear form data after successful registration",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid data and register successfully\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Navigate back to register page\ncy.visit(\"/register\");\n// Check if form fields are empty\ncy.get('input[name=\"name\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"email\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"password\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "318c4435-9d6a-4ad8-b596-a00112c3a409",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle network errors gracefully",
              "fullTitle": "Registration Form should handle network errors gracefully",
              "timedOut": null,
              "duration": 5343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Mock network error\ncy.intercept(\"POST\", \"**/register\", { forceNetworkError: true }).as(\"registerRequest\");\n// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Should show error message\ncy.get(\"div\")\n    .contains(\"An error occurred. Please try again.\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An error occurred. Please try again.' within the element: <div#teleports> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An error occurred. Please try again.' within the element: <div#teleports> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:359:7)",
                "diff": null
              },
              "uuid": "1937e546-6fa9-42ec-a710-d8b619e94f18",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate fields on blur",
              "fullTitle": "Registration Form should validate fields on blur",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Focus on name field and enter short name\ncy.get('input[name=\"name\"]').focus().type(\"A\").blur();\n// Should show validation error\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"be.visible\");\n// Enter valid name\ncy.get('input[name=\"name\"]').clear().type(\"John Doe\").blur();\n// Error should be cleared\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"not.exist\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:369:7)",
                "diff": null
              },
              "uuid": "821e0d78-0e66-408b-be82-82b84cfb48d4",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have responsive design on different screen sizes",
              "fullTitle": "Registration Form should have responsive design on different screen sizes",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Test on mobile viewport\ncy.viewport(375, 667);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Test on tablet viewport\ncy.viewport(768, 1024);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Test on desktop viewport\ncy.viewport(1920, 1080);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");",
              "err": {},
              "uuid": "1648b4c4-db45-436e-8089-af2ee4bfc3e1",
              "parentUUID": "b6650425-401d-405c-ab51-7dde0214f8d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5dd3135-2d9b-4c91-9f1d-0da96d930508",
            "decec9c5-dce4-4aee-9548-c734cb39dac2",
            "90545c74-afc3-420c-adb3-5f3ef9aa19bf",
            "71c00267-8019-4728-898f-55ac2523736f",
            "1d5e391c-1cc9-44f1-a350-11e210439abe",
            "603c6c8a-b0f5-417d-a3cc-86030884bfd8",
            "6b658fb6-1669-4dae-baab-27cbe99b46ed",
            "318c4435-9d6a-4ad8-b596-a00112c3a409",
            "1648b4c4-db45-436e-8089-af2ee4bfc3e1"
          ],
          "failures": [
            "e2330757-9cf7-4994-8fac-e225f4519306",
            "ddae66ed-adf0-4e61-93d8-bfd758f09662",
            "37249e60-4fd9-4f0d-bd6b-7ce5006dec63",
            "e2cee82a-d509-40c6-ac42-441b2f17474b",
            "917bb8c6-bbb7-408e-829f-5088cacdc8f4",
            "6a105dc4-972d-4565-823c-fb4a0873e010",
            "6474a80a-5d62-4bbc-a048-1ffaa6682448",
            "c6a86a3f-264c-46f6-a835-097bc762fd26",
            "95440267-20f7-4036-bae4-550751cf911e",
            "1937e546-6fa9-42ec-a710-d8b619e94f18",
            "821e0d78-0e66-408b-be82-82b84cfb48d4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 60491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
          "title": "Registration Form Integration Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should integrate with login flow",
              "fullTitle": "Registration Form Integration Tests should integrate with login flow",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click sign in link\ncy.get(\"a\").contains(\"Sign in\").click();\n// Should be on login page\ncy.url().should(\"include\", \"/login\");\ncy.get(\"h2\").should(\"contain\", \"Sign in to your account\");\n// Navigate back to register\ncy.visit(\"/register\");\ncy.get(\"h2\").should(\"contain\", \"Create your account\");",
              "err": {},
              "uuid": "5cc2ff23-b9c7-409e-8cb7-787a4c8031b3",
              "parentUUID": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should maintain form state during navigation",
              "fullTitle": "Registration Form Integration Tests should maintain form state during navigation",
              "timedOut": null,
              "duration": 763,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter partial data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Navigate away and back\ncy.visit(\"/\");\ncy.visit(\"/register\");\n// Form should be reset (this is expected behavior)\ncy.get('input[name=\"name\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"email\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "d93d7811-cbfa-473c-89cf-9fae2b708045",
              "parentUUID": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle multiple rapid submissions",
              "fullTitle": "Registration Form Integration Tests should handle multiple rapid submissions",
              "timedOut": null,
              "duration": 6673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit multiple times rapidly\ncy.get('button[type=\"submit\"]').click();\ncy.get('button[type=\"submit\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Should handle gracefully (button should be disabled during loading)\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<button.group.relative.w-full.flex.justify-center.py-2.px-4.border.border-transparent.text-sm.font-medium.rounded-md.text-white.bg-indigo-600.hover:bg-indigo-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-indigo-500.disabled:opacity-50.disabled:cursor-not-allowed>' to be 'disabled'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<button.group.relative.w-full.flex.justify-center.py-2.px-4.border.border-transparent.text-sm.font-medium.rounded-md.text-white.bg-indigo-600.hover:bg-indigo-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-indigo-500.disabled:opacity-50.disabled:cursor-not-allowed>' to be 'disabled'\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:446:36)",
                "diff": null
              },
              "uuid": "fb0d84af-cdff-423c-a0aa-5db6a72f740a",
              "parentUUID": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate password strength requirements",
              "fullTitle": "Registration Form Integration Tests should validate password strength requirements",
              "timedOut": null,
              "duration": 4801,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Test various password scenarios\nvar testCases = [\n    {\n        password: \"123\",\n        expectedError: \"Password must be at least 6 characters\",\n    },\n    { password: \"123456\", expectedError: null }, // Valid password\n    { password: \"password123\", expectedError: null }, // Valid password\n];\ntestCases.forEach(function (_a) {\n    var password = _a.password, expectedError = _a.expectedError;\n    cy.get('input[name=\"password\"]').clear().type(password);\n    cy.get('input[name=\"confirmPassword\"]').clear().type(password);\n    if (expectedError) {\n        cy.get('button[type=\"submit\"]').click();\n        cy.get(\"p\").contains(expectedError).should(\"be.visible\");\n    }\n    else {\n        // Should not show error for valid password\n        cy.get(\"p\")\n            .contains(\"Password must be at least 6 characters\")\n            .should(\"not.exist\");\n    }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:467:44)\nat Array.forEach (<anonymous>)\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:461:14)",
                "diff": null
              },
              "uuid": "0ea5317f-c463-4f52-bcb1-0143d9bddbe4",
              "parentUUID": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle special characters in name field",
              "fullTitle": "Registration Form Integration Tests should handle special characters in name field",
              "timedOut": null,
              "duration": 5890,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Test names with special characters\nvar testNames = [\n    \"O'Connor\",\n    \"José\",\n    \"Jean-Pierre\",\n    \"Mary-Jane\",\n    \"D'Angelo\",\n];\ntestNames.forEach(function (name) {\n    cy.get('input[name=\"name\"]').clear().type(name);\n    cy.get('input[name=\"email\"]').type(\"test@example.com\");\n    cy.get('input[name=\"password\"]').type(\"password123\");\n    cy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n    cy.get('input[name=\"agree-terms\"]').click();\n    // Should not show validation error for valid names\n    cy.get(\"p\")\n        .contains(\"Name must be at least 2 characters\")\n        .should(\"not.exist\");\n});",
              "err": {},
              "uuid": "9fe33c2d-5eb5-4aba-9c08-6e96b1814926",
              "parentUUID": "783f6c8f-2a24-4f14-9c3b-17e5541c480e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cc2ff23-b9c7-409e-8cb7-787a4c8031b3",
            "d93d7811-cbfa-473c-89cf-9fae2b708045",
            "9fe33c2d-5eb5-4aba-9c08-6e96b1814926"
          ],
          "failures": [
            "fb0d84af-cdff-423c-a0aa-5db6a72f740a",
            "0ea5317f-c463-4f52-bcb1-0143d9bddbe4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18337,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}