{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 12,
    "pending": 0,
    "failures": 13,
    "start": "2025-07-22T08:21:06.476Z",
    "end": "2025-07-22T08:22:26.344Z",
    "duration": 79868,
    "testsRegistered": 25,
    "passPercent": 48,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2841fd82-d6c2-48be-9798-459fcc57dec2",
      "title": "",
      "fullFile": "cypress/e2e/register.cy.ts",
      "file": "cypress/e2e/register.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a29a3508-e26c-40e5-a076-ed9304d86f00",
          "title": "Registration Form",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display registration form with all elements",
              "fullTitle": "Registration Form should display registration form with all elements",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if the page loads correctly\ncy.get(\"h2\").should(\"contain\", \"Create your account\");\ncy.get(\"p\").should(\"contain\", \"Join us today! Please fill in your details.\");\n// Check if form elements are present\ncy.get('input[name=\"name\"]').should(\"be.visible\");\ncy.get('input[name=\"email\"]').should(\"be.visible\");\ncy.get('input[name=\"password\"]').should(\"be.visible\");\ncy.get('input[name=\"confirmPassword\"]').should(\"be.visible\");\ncy.get('input[name=\"agree-terms\"]').should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Check if links are present\ncy.get(\"a\").contains(\"Sign in\").should(\"be.visible\");",
              "err": {},
              "uuid": "8e274f6f-4cc7-477e-a4df-9da9345ed193",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation errors for empty form submission",
              "fullTitle": "Registration Form should show validation errors for empty form submission",
              "timedOut": null,
              "duration": 4273,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Submit form without entering any data\ncy.get('button[type=\"submit\"]').click();\n// Check for name validation error\ncy.get('input[name=\"name\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Name is required\").should(\"be.visible\");\n// Check for email validation error\ncy.get('input[name=\"email\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Email is required\").should(\"be.visible\");\n// Check for password validation error\ncy.get('input[name=\"password\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Password is required\").should(\"be.visible\");\n// Check for confirm password validation error\ncy.get('input[name=\"confirmPassword\"]').should(\"have.class\", \"border-red-500\");\ncy.get(\"p\").contains(\"Please confirm your password\").should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<input#name.mt-1.appearance-none.relative.block.w-full.px-3.py-2.border.border-gray-300.placeholder-gray-500.text-gray-900.rounded-md.focus:outline-none.focus:ring-indigo-500.focus:border-indigo-500.sm:text-sm>' to have class 'border-red-500'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<input#name.mt-1.appearance-none.relative.block.w-full.px-3.py-2.border.border-gray-300.placeholder-gray-500.text-gray-900.rounded-md.focus:outline-none.focus:ring-indigo-500.focus:border-indigo-500.sm:text-sm>' to have class 'border-red-500'\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:32:33)",
                "diff": null
              },
              "uuid": "cf7239ad-7999-47d3-8bc9-0dd19d59d1c7",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for short name",
              "fullTitle": "Registration Form should show validation error for short name",
              "timedOut": null,
              "duration": 5173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter short name\ncy.get('input[name=\"name\"]').type(\"A\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for name length validation error\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:64:7)",
                "diff": null
              },
              "uuid": "961ab925-d2a1-44f9-9a0b-65e6d20aabb5",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for invalid email format",
              "fullTitle": "Registration Form should show validation error for invalid email format",
              "timedOut": null,
              "duration": 5227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter invalid email\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"invalid-email\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for email format validation error\ncy.get(\"p\")\n    .contains(\"Please enter a valid email address\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter a valid email address' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Please enter a valid email address' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:80:7)",
                "diff": null
              },
              "uuid": "ba750f2b-19e6-4a04-b1f3-a1a472dfac16",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for short password",
              "fullTitle": "Registration Form should show validation error for short password",
              "timedOut": null,
              "duration": 5116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but short password\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for password length validation error\ncy.get(\"p\")\n    .contains(\"Password must be at least 6 characters\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:96:7)",
                "diff": null
              },
              "uuid": "c2832375-4d40-4076-be69-e56d0dabef5e",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error for mismatched passwords",
              "fullTitle": "Registration Form should show validation error for mismatched passwords",
              "timedOut": null,
              "duration": 5320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but mismatched passwords\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"differentpassword\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for password mismatch validation error\ncy.get(\"p\").contains(\"Passwords do not match\").should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Passwords do not match' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Passwords do not match' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:110:51)",
                "diff": null
              },
              "uuid": "45e21c2a-8a74-4d48-8e81-8214a322d942",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show validation error when terms are not agreed",
              "fullTitle": "Registration Form should show validation error when terms are not agreed",
              "timedOut": null,
              "duration": 5265,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid data but don't agree to terms\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check for terms agreement validation error\ncy.get(\"p\")\n    .contains(\"You must agree to the terms and conditions\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'You must agree to the terms and conditions' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'You must agree to the terms and conditions' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:126:7)",
                "diff": null
              },
              "uuid": "c7840294-f495-40e0-a7e1-af4a909ab208",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should successfully register with valid data",
              "fullTitle": "Registration Form should successfully register with valid data",
              "timedOut": null,
              "duration": 2363,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check loading state\ncy.get('button[type=\"submit\"]').should(\"contain\", \"Creating account...\");\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");\n// Wait for redirect to login page\ncy.url().should(\"include\", \"/login\");\n// Verify user data is saved to localStorage\ncy.window().then(function (win) {\n    var users = JSON.parse(win.localStorage.getItem(\"registeredUsers\") || \"[]\");\n    var newUser = users.find(function (user) { return user.email === \"newuser@example.com\"; });\n    expect(newUser).to.exist;\n    expect(newUser.name).to.equal(\"John Doe\");\n    expect(newUser.password).to.equal(\"password123\");\n});",
              "err": {},
              "uuid": "d1309c36-e036-4dba-97b9-c6222031cbf0",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error message for existing email",
              "fullTitle": "Registration Form should show error message for existing email",
              "timedOut": null,
              "duration": 7960,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// First, register a user\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"existing@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Wait for redirect and go back to register\ncy.url().should(\"include\", \"/login\");\ncy.visit(\"/register\");\n// Try to register with the same email\ncy.get('input[name=\"name\"]').type(\"Another User\");\ncy.get('input[name=\"email\"]').type(\"existing@example.com\");\ncy.get('input[name=\"password\"]').type(\"differentpassword\");\ncy.get('input[name=\"confirmPassword\"]').type(\"differentpassword\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Check for existing email error message\ncy.get(\"div\")\n    .contains(\"An account with this email already exists\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An account with this email already exists' within the element: <div#teleports> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An account with this email already exists' within the element: <div#teleports> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:185:7)",
                "diff": null
              },
              "uuid": "18d6b43b-bab6-4eff-8bf4-5fd4e59d473d",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear validation errors when user starts typing",
              "fullTitle": "Registration Form should clear validation errors when user starts typing",
              "timedOut": null,
              "duration": 4286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Submit empty form to trigger validation errors\ncy.get('button[type=\"submit\"]').click();\n// Verify errors are shown\ncy.get(\"p\").contains(\"Name is required\").should(\"be.visible\");\ncy.get(\"p\").contains(\"Email is required\").should(\"be.visible\");\n// Start typing in name field\ncy.get('input[name=\"name\"]').type(\"John\");\n// Name error should be cleared\ncy.get(\"p\").contains(\"Name is required\").should(\"not.exist\");\n// Start typing in email field\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\n// Email error should be cleared\ncy.get(\"p\").contains(\"Email is required\").should(\"not.exist\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name is required' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name is required' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:193:45)",
                "diff": null
              },
              "uuid": "65d00b11-98a0-4506-99c2-f73062cc3a3c",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle terms and conditions checkbox",
              "fullTitle": "Registration Form should handle terms and conditions checkbox",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if terms checkbox is unchecked by default\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");\n// Click the checkbox\ncy.get('input[name=\"agree-terms\"]').click();\n// Check if it's now checked\ncy.get('input[name=\"agree-terms\"]').should(\"be.checked\");\n// Click again to uncheck\ncy.get('input[name=\"agree-terms\"]').click();\n// Check if it's unchecked\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "2289129f-fe9a-43a2-82dd-c909b7639555",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should navigate to login page when clicking sign in link",
              "fullTitle": "Registration Form should navigate to login page when clicking sign in link",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the sign in link\ncy.get(\"a\").contains(\"Sign in\").click();\n// Should navigate to login page\ncy.url().should(\"include\", \"/login\");",
              "err": {},
              "uuid": "fdfcbf60-5343-4dad-9d6b-f1667a14c29a",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper form accessibility",
              "fullTitle": "Registration Form should have proper form accessibility",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check if form inputs have proper labels\ncy.get('input[name=\"name\"]').should(\"have.attr\", \"id\", \"name\");\ncy.get('input[name=\"email\"]').should(\"have.attr\", \"id\", \"email\");\ncy.get('input[name=\"password\"]').should(\"have.attr\", \"id\", \"password\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.attr\", \"id\", \"confirmPassword\");\ncy.get('input[name=\"agree-terms\"]').should(\"have.attr\", \"id\", \"agree-terms\");\n// Check if form has proper autocomplete attributes\ncy.get('input[name=\"name\"]').should(\"have.attr\", \"autocomplete\", \"name\");\ncy.get('input[name=\"email\"]').should(\"have.attr\", \"autocomplete\", \"email\");\ncy.get('input[name=\"password\"]').should(\"have.attr\", \"autocomplete\", \"new-password\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.attr\", \"autocomplete\", \"new-password\");",
              "err": {},
              "uuid": "c1946f80-9613-4c8c-93d0-f79cadd6f0b0",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle keyboard navigation",
              "fullTitle": "Registration Form should handle keyboard navigation",
              "timedOut": null,
              "duration": 232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Tab through form elements\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"name\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"email\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"password\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"confirmPassword\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"name\", \"agree-terms\");\ncy.get(\"body\").tab();\ncy.focused().should(\"have.attr\", \"type\", \"submit\");",
              "err": {
                "message": "TypeError: cy.get(...).tab is not a function",
                "estack": "TypeError: cy.get(...).tab is not a function\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:267:19)\n    at runnable.fn (http://localhost:3000/__cypress/runner/cypress_runner.js:141799:19)\n    at callFn (http://localhost:3000/__cypress/runner/cypress_runner.js:160877:21)\n    at Runnable.run (http://localhost:3000/__cypress/runner/cypress_runner.js:160864:7)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:166954:30)\n    at PassThroughHandlerContext.finallyHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "1711c181-e80b-4564-a62e-62fee7cab11e",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit form on Enter key press",
              "fullTitle": "Registration Form should submit form on Enter key press",
              "timedOut": null,
              "duration": 2408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit with Enter key\ncy.get('input[name=\"confirmPassword\"]').type(\"{enter}\");\n// Should redirect to login page\ncy.url().should(\"include\", \"/login\");",
              "err": {},
              "uuid": "1aaccbc7-71ce-4f86-9a8a-4ae9ffb47a22",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show loading state during form submission",
              "fullTitle": "Registration Form should show loading state during form submission",
              "timedOut": null,
              "duration": 1251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Check loading state\ncy.get('button[type=\"submit\"]').should(\"contain\", \"Creating account...\");\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");\n// Check if spinner is visible\ncy.get(\"svg.animate-spin\").should(\"be.visible\");",
              "err": {},
              "uuid": "e54f4ea7-f0be-4b03-bdb0-2b52622285d3",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear form data after successful registration",
              "fullTitle": "Registration Form should clear form data after successful registration",
              "timedOut": null,
              "duration": 1274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter valid data and register successfully\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Navigate back to register page\ncy.visit(\"/register\");\n// Check if form fields are empty\ncy.get('input[name=\"name\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"email\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"password\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"confirmPassword\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "cd8c6834-6fdb-4054-b010-bb7b2dab8f41",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle network errors gracefully",
              "fullTitle": "Registration Form should handle network errors gracefully",
              "timedOut": null,
              "duration": 5372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Mock network error\ncy.intercept(\"POST\", \"**/register\", { forceNetworkError: true }).as(\"registerRequest\");\n// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit form\ncy.get('button[type=\"submit\"]').click();\n// Should show error message\ncy.get(\"div\")\n    .contains(\"An error occurred. Please try again.\")\n    .should(\"be.visible\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An error occurred. Please try again.' within the element: <div#teleports> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'An error occurred. Please try again.' within the element: <div#teleports> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:359:7)",
                "diff": null
              },
              "uuid": "17931dee-8978-4a85-82ab-655409dcbc87",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate fields on blur",
              "fullTitle": "Registration Form should validate fields on blur",
              "timedOut": null,
              "duration": 4284,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Focus on name field and enter short name\ncy.get('input[name=\"name\"]').focus().type(\"A\").blur();\n// Should show validation error\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"be.visible\");\n// Enter valid name\ncy.get('input[name=\"name\"]').clear().type(\"John Doe\").blur();\n// Error should be cleared\ncy.get(\"p\")\n    .contains(\"Name must be at least 2 characters\")\n    .should(\"not.exist\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Name must be at least 2 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:369:7)",
                "diff": null
              },
              "uuid": "92aeae8f-8631-44d0-81a4-9cfe540ac52f",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have responsive design on different screen sizes",
              "fullTitle": "Registration Form should have responsive design on different screen sizes",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Test on mobile viewport\ncy.viewport(375, 667);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Test on tablet viewport\ncy.viewport(768, 1024);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");\n// Test on desktop viewport\ncy.viewport(1920, 1080);\ncy.get(\".max-w-md\").should(\"be.visible\");\ncy.get('button[type=\"submit\"]').should(\"be.visible\");",
              "err": {},
              "uuid": "c509ff3b-46c1-4d7c-b688-e5c91cf47876",
              "parentUUID": "a29a3508-e26c-40e5-a076-ed9304d86f00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e274f6f-4cc7-477e-a4df-9da9345ed193",
            "d1309c36-e036-4dba-97b9-c6222031cbf0",
            "2289129f-fe9a-43a2-82dd-c909b7639555",
            "fdfcbf60-5343-4dad-9d6b-f1667a14c29a",
            "c1946f80-9613-4c8c-93d0-f79cadd6f0b0",
            "1aaccbc7-71ce-4f86-9a8a-4ae9ffb47a22",
            "e54f4ea7-f0be-4b03-bdb0-2b52622285d3",
            "cd8c6834-6fdb-4054-b010-bb7b2dab8f41",
            "c509ff3b-46c1-4d7c-b688-e5c91cf47876"
          ],
          "failures": [
            "cf7239ad-7999-47d3-8bc9-0dd19d59d1c7",
            "961ab925-d2a1-44f9-9a0b-65e6d20aabb5",
            "ba750f2b-19e6-4a04-b1f3-a1a472dfac16",
            "c2832375-4d40-4076-be69-e56d0dabef5e",
            "45e21c2a-8a74-4d48-8e81-8214a322d942",
            "c7840294-f495-40e0-a7e1-af4a909ab208",
            "18d6b43b-bab6-4eff-8bf4-5fd4e59d473d",
            "65d00b11-98a0-4506-99c2-f73062cc3a3c",
            "1711c181-e80b-4564-a62e-62fee7cab11e",
            "17931dee-8978-4a85-82ab-655409dcbc87",
            "92aeae8f-8631-44d0-81a4-9cfe540ac52f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 60507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1184163c-c607-4b98-b75d-9cf15e5e055e",
          "title": "Registration Form Integration Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should integrate with login flow",
              "fullTitle": "Registration Form Integration Tests should integrate with login flow",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click sign in link\ncy.get(\"a\").contains(\"Sign in\").click();\n// Should be on login page\ncy.url().should(\"include\", \"/login\");\ncy.get(\"h2\").should(\"contain\", \"Sign in to your account\");\n// Navigate back to register\ncy.visit(\"/register\");\ncy.get(\"h2\").should(\"contain\", \"Create your account\");",
              "err": {},
              "uuid": "892a3f0a-eafd-4b82-9c10-7d2efadf8492",
              "parentUUID": "1184163c-c607-4b98-b75d-9cf15e5e055e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should maintain form state during navigation",
              "fullTitle": "Registration Form Integration Tests should maintain form state during navigation",
              "timedOut": null,
              "duration": 720,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Enter partial data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"test@example.com\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Navigate away and back\ncy.visit(\"/\");\ncy.visit(\"/register\");\n// Form should be reset (this is expected behavior)\ncy.get('input[name=\"name\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"email\"]').should(\"have.value\", \"\");\ncy.get('input[name=\"agree-terms\"]').should(\"not.be.checked\");",
              "err": {},
              "uuid": "d10957f5-ae29-4990-ac42-caafbab6e55d",
              "parentUUID": "1184163c-c607-4b98-b75d-9cf15e5e055e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle multiple rapid submissions",
              "fullTitle": "Registration Form Integration Tests should handle multiple rapid submissions",
              "timedOut": null,
              "duration": 6654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Enter valid registration data\ncy.get('input[name=\"name\"]').type(\"John Doe\");\ncy.get('input[name=\"email\"]').type(\"newuser@example.com\");\ncy.get('input[name=\"password\"]').type(\"password123\");\ncy.get('input[name=\"confirmPassword\"]').type(\"password123\");\ncy.get('input[name=\"agree-terms\"]').click();\n// Submit multiple times rapidly\ncy.get('button[type=\"submit\"]').click();\ncy.get('button[type=\"submit\"]').click();\ncy.get('button[type=\"submit\"]').click();\n// Should handle gracefully (button should be disabled during loading)\ncy.get('button[type=\"submit\"]').should(\"be.disabled\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<button.group.relative.w-full.flex.justify-center.py-2.px-4.border.border-transparent.text-sm.font-medium.rounded-md.text-white.bg-indigo-600.hover:bg-indigo-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-indigo-500.disabled:opacity-50.disabled:cursor-not-allowed>' to be 'disabled'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<button.group.relative.w-full.flex.justify-center.py-2.px-4.border.border-transparent.text-sm.font-medium.rounded-md.text-white.bg-indigo-600.hover:bg-indigo-700.focus:outline-none.focus:ring-2.focus:ring-offset-2.focus:ring-indigo-500.disabled:opacity-50.disabled:cursor-not-allowed>' to be 'disabled'\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:446:36)",
                "diff": null
              },
              "uuid": "a38f1146-2c02-4f1b-b8dc-e6d27b8c8faa",
              "parentUUID": "1184163c-c607-4b98-b75d-9cf15e5e055e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate password strength requirements",
              "fullTitle": "Registration Form Integration Tests should validate password strength requirements",
              "timedOut": null,
              "duration": 4768,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Test various password scenarios\nvar testCases = [\n    {\n        password: \"123\",\n        expectedError: \"Password must be at least 6 characters\",\n    },\n    { password: \"123456\", expectedError: null }, // Valid password\n    { password: \"password123\", expectedError: null }, // Valid password\n];\ntestCases.forEach(function (_a) {\n    var password = _a.password, expectedError = _a.expectedError;\n    cy.get('input[name=\"password\"]').clear().type(password);\n    cy.get('input[name=\"confirmPassword\"]').clear().type(password);\n    if (expectedError) {\n        cy.get('button[type=\"submit\"]').click();\n        cy.get(\"p\").contains(expectedError).should(\"be.visible\");\n    }\n    else {\n        // Should not show error for valid password\n        cy.get(\"p\")\n            .contains(\"Password must be at least 6 characters\")\n            .should(\"not.exist\");\n    }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Password must be at least 6 characters' within the element: <p.text-sm.text-gray-600> but never did.\n    at eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:467:44)\nat Array.forEach (<anonymous>)\n    at Context.eval (webpack://demo-cypress/./cypress/e2e/register.cy.ts:461:14)",
                "diff": null
              },
              "uuid": "7a2a6df4-ac2c-4707-ac4a-dfcf7e2b86c7",
              "parentUUID": "1184163c-c607-4b98-b75d-9cf15e5e055e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle special characters in name field",
              "fullTitle": "Registration Form Integration Tests should handle special characters in name field",
              "timedOut": null,
              "duration": 5892,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Test names with special characters\nvar testNames = [\n    \"O'Connor\",\n    \"José\",\n    \"Jean-Pierre\",\n    \"Mary-Jane\",\n    \"D'Angelo\",\n];\ntestNames.forEach(function (name) {\n    cy.get('input[name=\"name\"]').clear().type(name);\n    cy.get('input[name=\"email\"]').type(\"test@example.com\");\n    cy.get('input[name=\"password\"]').type(\"password123\");\n    cy.get('input[name=\"confirmPassword\"]').type(\"password123\");\n    cy.get('input[name=\"agree-terms\"]').click();\n    // Should not show validation error for valid names\n    cy.get(\"p\")\n        .contains(\"Name must be at least 2 characters\")\n        .should(\"not.exist\");\n});",
              "err": {},
              "uuid": "6eb522ae-868f-43ff-923e-20142e764828",
              "parentUUID": "1184163c-c607-4b98-b75d-9cf15e5e055e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "892a3f0a-eafd-4b82-9c10-7d2efadf8492",
            "d10957f5-ae29-4990-ac42-caafbab6e55d",
            "6eb522ae-868f-43ff-923e-20142e764828"
          ],
          "failures": [
            "a38f1146-2c02-4f1b-b8dc-e6d27b8c8faa",
            "7a2a6df4-ac2c-4707-ac4a-dfcf7e2b86c7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}